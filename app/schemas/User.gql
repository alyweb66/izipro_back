directive @length(max: Int!) on INPUT_FIELD_DEFINITION
scalar Upload

type User {
    id: Int!
    first_name: String
    last_name: String
    email: String!
    address: String
    postal_code: String
    city: String
    lat: Float
    lng: Float
    siret: String
    denomination: String
    role: String
    image: String
    description: String
    requests(id: Int!, offset: Int!, limit: Int!): [Request]
    requestsConversations(offset: Int!, limit: Int!): [Request]
    messages(id: Int!, conversationId: Int!, offset: Int!, limit: Int! ): [Message!]!
    jobs: [UserHasJob]
    settings: [UserSettings]
    subscription: [UserSubscription]
}


type AuthPayload {
    token: String!
    refreshToken: String!
}


type AccessToken {
    token: String!
}

input loginInput {
    email: String!
    password: String!
    activeSession: Boolean!
}


input CreateUserInput {
    email: validateEmail!
    password: validatePassword! @length(max: 60)
}

input ConfirmRegisterEmailInput {
    token: String!
}

input CreateProUserInput {
    email: validateEmail!
    password: validatePassword!
    siret: validateSiret!
}

input UpdateUserInput {
    first_name: String @length(max: 50)
    last_name: String @length(max: 50)
    email: validateEmail
    image: Upload
    description: String @length(max: 200)
    address: String @length(max: 100)
    postal_code: validatePostalCode
    city: String @length(max: 50)
    siret: validateSiret @length(max: 14)
    denomination: String @length(max: 50)
    lat: Float
    lng: Float
}

input ForgotPasswordInput {
    email: validateEmail!
}

input ValidateForgotPasswordInput {
    token: String!
    password: validatePassword! @length(max: 60)
}

input ChangePasswordInput {
    oldPassword: validatePassword! @length(max: 60)
    newPassword: validatePassword! @length(max: 60)
}

