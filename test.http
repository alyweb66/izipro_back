@endpoint = http://localhost:{{$dotenv PORT}}

### Request to find all messages
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query {
  messages {
    content
  }
}

### Request to find message by id
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query($id: Int!) {
  message(id: $id) {
    id,
    content,
  }
}

{
  "id": 3
}

### Request to find all users
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query {
  users {
    first_name
  }
}

### Request to find user by id
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query($id: Int!) {
  user(id: $id) {
    id,
    first_name,
    last_name
  }
}

{
  "id": 7
}

### Request to create user
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation($input: CreateUserInput!) {
  createUser(input: $input) {
    id,
    email,
  }
}

{
  "input": {
    "email": "alemany.pierrick@gmail.com",
    "password": "Tutu12345*"
  }
}

### Request to login user
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation($input: loginInput!) {
  login(input: $input) 
    # we specify here the information that will be returned
}

{
  "input": {
    "email": "alemany.pierrick@gmail.com",
    "password": "Tutu12345*"
  }
}

### Request to verify user mail
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation($input: confirmRegisterEmailInput!) {
  confirmRegisterEmail(input: $input)
}

{
  "input": {
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNlYXNleGFuZHN1bjg3QGxpdmUuZnIiLCJ1c2VySWQiOjYsImlhdCI6MTcwOTA0NDk4MiwiZXhwIjoxNzA5MDQ4NTgyfQ.oe8rVh_MKnTBHJlv_tFx4wmRY1UMNl2R9jhUY-84_zg"
  }
}


### Request to logout user
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation {
  logout
}

### Request to update user
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation($id: Int!, $input: UpdateUserInput!) {
  updateUser(id: $id, input: $input) {
    id,
    first_name,
    last_name,
    email,
    adress,
    postal_code,
    city,
    company_name,
    siret
  }
}

{
  "id": 6,
  "input": {
    "first_name": "Pierrick",
    "last_name": "Alemany",
    "postal_code": "75000",
    "email": "seasexandsun87@live.fr",
    "city": "Paris",
    "company_name": "Alemany",
    "siret": 12345678912345
  }
}

### Request refresh token
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
Cookie: auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Niwicm9sZSI6InVzZXIiLCJpYXQiOjE3MDg5NTY1OTIsImV4cCI6MTcwODk1NzQ5Mn0.euhsoGko2rXr1qLc6nR_eGbpLZ5w1EiUs99WiNvuPag;refresh-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Niwicm9sZSI6InVzZXIiLCJpYXQiOjE3MDg5NTY1OTIsImV4cCI6MTcxMDE2NjE5Mn0.7FRvczlvbJYD6ORualVkjUt6MpOFXVgZEY7XRNQIXtE;

mutation Mutation {
  refreshUserToken
}




### Delete user
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation Mutation($id: Int!) {
  deleteUser(id: $id)
}

{
  "id": 7
}

### Request to find messages to user by id
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query($id: Int!) {
  user(id: $id) {
    id,
    first_name,
    last_name
    messages {
      content
    }
  }
}

{
  "id": 7
}

### Request to find all request
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query {
  requests {
    id,
    message
  }
}

### Request to find a request by id
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query($id: Int!) {
  request(id: $id) {
    id,
    message
  }
}

{
  "id": 3
}

### Request to find all media
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query {
  medias {
    id,
    url
  }
}


### Request to find a media by id
POST {{endpoint}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Query($id: Int!) {
  media(id: $id) {
    id,
    url
  }
}

{
  "id": 3
}